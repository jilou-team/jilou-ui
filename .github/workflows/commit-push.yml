name: Commit checker

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Code
        uses: actions/checkout@v4

      - name: Verify gradlew file exists
        run: |
          echo "Listing files in the workspace"
          ls -la $GITHUB_WORKSPACE  # Pr端fe, ob gradlew im Root-Verzeichnis vorhanden ist

  setup:
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Set up Java 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Check Ubuntu Version
        run: lsb_release -a

      - name: Set DISPLAY environment variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Update package list
        run: sudo apt-get update

      - name: Enable Universe and Multiverse Repositories
        run: |
          sudo add-apt-repository universe
          sudo add-apt-repository multiverse
          sudo apt-get update

      - name: Install dependencies
        run: sudo apt-get install libgl1-mesa-dev xorg-dev

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 &

  cache:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle

  build:
    runs-on: ubuntu-latest
    needs: cache

    steps:
      - name: Ensure gradlew is executable
        run: |
          echo "Listing files in the workspace before setting permissions"
          ls -la $GITHUB_WORKSPACE  # Weitere Pr端fung
          chmod +x gradlew || echo "gradlew not found"  # Gradle Wrapper ausf端hrbar machen, wenn vorhanden

      - name: Run Gradle Build and Sonar
        run: |
          echo "Running Gradle build and Sonar"
          ./gradlew build sonar --info || echo "Gradle build or Sonar failed, but continuing"

  handle-sonar-failure-push:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && failure()

    steps:
      - name: Handle Sonar Failure on Push
        run: |
          echo "Sonar analysis failed, but continuing as it's a push event."
          exit 0  # Build als erfolgreich markiert, auch wenn Sonar fehlgeschlagen ist

  fail-pr-build-on-sonar-failure:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request' && failure()

    steps:
      - name: Fail on Sonar Failure for Pull Requests
        run: |
          echo "Sonar analysis failed for pull request, failing the build."
          exit 1  # Erzwungener Fehler f端r PRs bei fehlerhaftem Sonar-Check
